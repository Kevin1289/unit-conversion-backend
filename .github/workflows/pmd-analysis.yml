# CI Workflow: PMD Analysis
#
# Description:
#   This workflow performs static code analysis using PMD to identify potential issues and code smells
#   in the Java codebase. It ensures that code quality checks are performed as part of the CI process.
#
# Triggers:
#   - Pushes to the master branch
#   - Pull requests targeting the master branch
#
# Steps:
#   1. Checkout code: Fetches the codebase associated with the specified branch or pull request from the VCS repository.
#   2. Setup JDK: Sets up the Java environment using the specified JDK version.
#   3. Run PMD Analysis: Executes PMD analysis on the Java codebase using Maven.
#
# Note: Adjust branch names and Java versions as needed.

name: PMD Analysis

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - master

jobs:
  pmd:
    name: Run PMD Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Cache Maven dependencies
      - name: Cache Maven dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
          cache: maven

      - name: Run PMD Analysis
        run: mvn verify

      - if: steps.cache.outputs.cache-hit != 'true'
        name: Install Maven dependencies
        run: mvn dependency:go-offline
