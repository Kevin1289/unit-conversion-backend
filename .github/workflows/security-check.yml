# CI Workflow: Security Check
#
# Description: This workflow performs security vulnerability checks using Snyk to identify potential security vulnerabilities in the Java codebase
#
# Triggers:
#   - Pushes to the master branch
#   - Pull requests targeting the master branch
#
# Steps:
#   1. Checkout code: Fetches the codebase associated with the specified branch or pull request from the VCS repository.
#   2. Setup JDK: Sets up the Java environment using the specified JDK version.
#   3. Run Snyk Check: Executes Snyk check on the Java codebase using Maven.
#

name: Snyk Check

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - master

jobs:
  snyk:
    name: Run Snyk Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Cache Maven dependencies
      - name: Cache Maven dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
          cache: maven

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/maven-3-jdk-20@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif --severity-threshold=high

      - name: Run Snyk Check
        run: mvn snyk:check

      - name: Run Dependency-Check
        run: mvn dependency-check:check

      - if: steps.cache.outputs.cache-hit != 'true'
        name: Install Maven dependencies
        run: mvn dependency:go-offline
