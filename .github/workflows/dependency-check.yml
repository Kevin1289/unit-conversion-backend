# CI Workflow: Dependency-Check
#
# Description:
#   This workflow runs Dependency-Check to scan the project's dependencies for security vulnerabilities.
#   It ensures that known vulnerabilities are identified and addressed during the CI process.
#
# Triggers:
#   - Pushes to the main branch
#   - Pull requests targeting the main branch
#
# Steps:
#   1. Checkout code: Fetches the codebase associated with the specified branch or pull request from the VCS repository.
#   2. Set up JDK: Sets up the Java environment using JDK 11.
#   3. Build with Maven: Builds the Spring Boot application using Maven, skipping tests.
#   4. Run Dependency-Check: Executes Dependency-Check to scan the project's dependencies for vulnerabilities.
#   5. Upload Dependency-Check report: Uploads the Dependency-Check report generated by Maven as an artifact.
#
# Notes:
#   - This workflow ensures that Dependency-Check is run automatically whenever changes are made to the codebase,
#     providing continuous monitoring of dependencies for security vulnerabilities.
#   - The Dependency-Check report can be reviewed in the GitHub Actions interface to identify and address any vulnerabilities.
#   - Customize the workflow as needed to adjust trigger conditions, JDK versions, or Maven commands.

name: Dependency-Check

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Cache Maven dependencies
      - name: Cache Maven dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
          cache: maven

    # - name: Build with Maven
    #   run: mvn clean install -DskipTests

    # - name: Run Dependency-Check
    #   run: mvn org.owasp:dependency-check-maven:check

    # - if: steps.cache.outputs.cache-hit != 'true'
    #   name: Install Maven dependencies
    #   run: mvn dependency:go-offline

    # - name: Upload Dependency-Check report
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: dependency-check-report
    #     path: target/dependency-check-report.html
